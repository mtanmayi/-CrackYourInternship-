class Solution {
    public int[] twoSum(int[] nums, int target) {
        int i,j;
        for(i=0;i<nums.length;i++)
        {
            for(j=i+1;j<nums.length;j++)
            {
                if(nums[i]+nums[j]==target)
                    return new int[]{i,j};
            }
        }
        return new int[]{-1,-1};
        
    }
}

----------------------------------------------O(n)---------------------------------------------

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int i;
        int[] ans=new int[2];
        HashMap<Integer,Integer> map=new HashMap<>();
        for(i=0;i<nums.length;i++)
        {
            if(map.containsKey(target-nums[i]))
            {
                
                ans[0]=map.get(target-nums[i]);
                ans[1]=i;
                map.put(nums[i],i);
            }
            else
                map.put(nums[i],i);
        }
                
        
        return ans;
        
    }
}
